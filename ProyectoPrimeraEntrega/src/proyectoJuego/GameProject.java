package proyectoJuego;

import java.awt.Color;
import java.awt.Dimension;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Grupo3
 */
public class GameProject extends javax.swing.JFrame {
    
    ArrayList<Object> jugadores = new ArrayList<>();
    int cont = 0;
    int victoriasPorDefecto = 0;
    ClaseControlador controller = new ClaseControlador();
    
    /** Creates new form GameProject */
    public GameProject() {
        initComponents();
        
        this.setMinimumSize(new Dimension(820, 390));
        setLocationRelativeTo(null);
        setResizable (false);
        setTitle ("Celebrity Fight Simulator");
        this.getContentPane().setBackground(Color.black);
        
        jugadores = controller.extraerObjetos("jugadores.dat");    //Este metodo controlador extrae los datos del objeto
        llenarCombo();      
        llenarTabla();
        if(jugadores.size() > 0){
            Jugador ultimo = (Jugador) jugadores.get(jugadores.size()-1);
            cont = ultimo.getId();
        }
        btnModificar.setEnabled(false);   //para desabilitar botones
        btnEliminar.setEnabled(false);
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cmblistaCedulas = new javax.swing.JComboBox<>();
        lblNombre = new javax.swing.JLabel();
        lblApellido = new javax.swing.JLabel();
        lblCedula = new javax.swing.JLabel();
        lblCedula1 = new javax.swing.JLabel();
        txtNombrePlayer = new javax.swing.JTextField();
        txtApellidoPlayer = new javax.swing.JTextField();
        txtCedulaPlayer = new javax.swing.JTextField();
        txtUsuarioPlayer = new javax.swing.JTextField();
        btnCrear = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblJugadores = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnSeleccionarCampeon = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImages(null);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        cmblistaCedulas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmblistaCedulasActionPerformed(evt);
            }
        });

        lblNombre.setFont(new java.awt.Font("DFKai-SB", 1, 14)); // NOI18N
        lblNombre.setText("Nombre:");

        lblApellido.setFont(new java.awt.Font("DFKai-SB", 1, 14)); // NOI18N
        lblApellido.setText("Apellido:");

        lblCedula.setFont(new java.awt.Font("DFKai-SB", 1, 14)); // NOI18N
        lblCedula.setText("Cédula:");

        lblCedula1.setFont(new java.awt.Font("DFKai-SB", 1, 14)); // NOI18N
        lblCedula1.setText("Usuario:");

        txtNombrePlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombrePlayerActionPerformed(evt);
            }
        });

        txtApellidoPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoPlayerActionPerformed(evt);
            }
        });

        txtCedulaPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCedulaPlayerActionPerformed(evt);
            }
        });

        txtUsuarioPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsuarioPlayerActionPerformed(evt);
            }
        });

        btnCrear.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        btnCrear.setForeground(new java.awt.Color(0, 0, 204));
        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(204, 0, 0));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModificar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        tblJugadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Nombre", "Apellido", "Cedula", "Usuario", "Victorias"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblJugadores);

        jLabel2.setFont(new java.awt.Font("DFKai-SB", 1, 16)); // NOI18N
        jLabel2.setText("Perfil Jugador:");

        btnSeleccionarCampeon.setFont(new java.awt.Font("DFKai-SB", 1, 14)); // NOI18N
        btnSeleccionarCampeon.setText("Ir a Selección de Campeón");
        btnSeleccionarCampeon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarCampeonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNombre)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblApellido)
                                    .addComponent(lblCedula))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtApellidoPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtUsuarioPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCedulaPlayer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(txtNombrePlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnModificar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnCrear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(32, 32, 32)
                                        .addComponent(cmblistaCedulas, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblCedula1))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSeleccionarCampeon, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNombre)
                            .addComponent(txtNombrePlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cmblistaCedulas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnCrear)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(btnEliminar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtApellidoPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblApellido))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(btnModificar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCedula)
                            .addComponent(txtCedulaPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCedula1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUsuarioPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSeleccionarCampeon)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(390, 20, 410, 330);

        jLabel1.setBackground(new java.awt.Color(0, 102, 102));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/portadaPersonajes.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(-10, 20, 390, 330);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombrePlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombrePlayerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombrePlayerActionPerformed

    private void txtApellidoPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoPlayerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoPlayerActionPerformed

    private void txtCedulaPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCedulaPlayerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCedulaPlayerActionPerformed

    private void txtUsuarioPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsuarioPlayerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsuarioPlayerActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        // TODO add your handling code here:
        
        String nombreJu = txtNombrePlayer.getText();
        String apellidoJu = txtApellidoPlayer.getText();
        String cedulaJu = txtCedulaPlayer.getText();
        String usuarioJu = txtUsuarioPlayer.getText();
        cont++;

        Jugador jugador = new Jugador(cont, txtNombrePlayer.getText(),txtApellidoPlayer.getText(),txtCedulaPlayer.getText(),txtUsuarioPlayer.getText());
        boolean jugadorExiste = false;
        
        if (!nombreJu.equals("")&& !apellidoJu.equals("")&& !cedulaJu.equals("") && !usuarioJu.equals("")){
            int confirmacion= JOptionPane.showConfirmDialog(rootPane, "Estás seguro?","Confirmación",JOptionPane.YES_NO_OPTION);
            if(confirmacion ==0){
                for (int i = 0; i < tblJugadores.getRowCount(); i++) {
                    if(tblJugadores.getValueAt(i, 3).toString().equals(cedulaJu) || tblJugadores.getValueAt(i, 4).toString().equals(usuarioJu)){
                        System.out.println("Jugador existe True");
                        jugadorExiste = true;
                        cont--;
                        break;
                    }else{
                        System.out.println("Verificación exitosa");
                    }
                }
                
                if (!jugadorExiste){
                    System.out.println("crea");
                    jugadores.add(jugador);
                    controller.escribirObjeto("jugadores.dat", jugadores);   //para guardar el archivo en la lista de objetos
                    jugadores = controller.extraerObjetos("jugadores.dat");  //guardo y vuelvo a leer el archivo
                    limpiar();
                    llenarCombo();
                    Object jugadoresG [] = {jugador.getId(),jugador.getNombre(),jugador.getApellido(),jugador.getCedula(),jugador.getUsuario(),victoriasPorDefecto};
                    DefaultTableModel model = (DefaultTableModel) tblJugadores.getModel();
                    model.addRow(jugadoresG);
                    
                }else{
                    JOptionPane.showMessageDialog(rootPane, "Cédula y/o Nombre de Usuario ya existente!!!");
                }
                txtNombrePlayer.setText("");
                txtApellidoPlayer.setText("");
                txtCedulaPlayer.setText("");
                txtUsuarioPlayer.setText("");
            } 
            
        }else{
            JOptionPane.showMessageDialog(rootPane,"Debe ingresar todos los campos");
            cont--;
        }
        
    }//GEN-LAST:event_btnCrearActionPerformed

    private void cmblistaCedulasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmblistaCedulasActionPerformed
        // TODO add your handling code here:
        Jugador jugadorSeleccionado = (Jugador)cmblistaCedulas.getSelectedItem();
        txtNombrePlayer.setText(jugadorSeleccionado.getNombre());
        txtApellidoPlayer.setText(jugadorSeleccionado.getApellido());
        txtCedulaPlayer.setText(jugadorSeleccionado.getCedula());
        txtUsuarioPlayer.setText(jugadorSeleccionado.getUsuario());
        
        btnModificar.setEnabled(true);
        btnEliminar.setEnabled(true);
        btnCrear.setEnabled(false);
    
    }//GEN-LAST:event_cmblistaCedulasActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        Jugador jugadorSeleccionado = (Jugador)cmblistaCedulas.getSelectedItem();
        DefaultTableModel model = (DefaultTableModel) tblJugadores.getModel();
        //System.out.println(cmbestudiantes.getSelectedIndex());
        model.removeRow(cmblistaCedulas.getSelectedIndex());
        jugadores.remove(jugadorSeleccionado);
        controller.escribirObjeto("jugadores.dat", jugadores);
        llenarCombo();
        limpiar();
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
        
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        Jugador jugadorSeleccionado = (Jugador)cmblistaCedulas.getSelectedItem();
        jugadorSeleccionado.setNombre(txtNombrePlayer.getText());
        jugadorSeleccionado.setApellido(txtApellidoPlayer.getText());
        jugadorSeleccionado.setCedula(txtCedulaPlayer.getText());
        jugadorSeleccionado.setUsuario(txtUsuarioPlayer.getText());

        Object jugadoresG [] = {jugadorSeleccionado.getId(),jugadorSeleccionado.getNombre(),jugadorSeleccionado.getApellido(),jugadorSeleccionado.getCedula(),jugadorSeleccionado.getUsuario()};
        DefaultTableModel model = (DefaultTableModel) tblJugadores.getModel();
        model.removeRow(cmblistaCedulas.getSelectedIndex());
        jugadores.remove(cmblistaCedulas.getSelectedIndex());
        model.insertRow(cmblistaCedulas.getSelectedIndex(), jugadoresG);
        jugadores.add(cmblistaCedulas.getSelectedIndex(), jugadorSeleccionado);
        controller.escribirObjeto("jugadores.dat", jugadores);
        llenarCombo();
        limpiar();
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnSeleccionarCampeonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarCampeonActionPerformed
        // TODO add your handling code here:
        if (cmblistaCedulas.getSelectedItem() == null){
            JOptionPane.showMessageDialog(rootPane,"Por favor elija un Jugador...");
        }else {
            VentanaPersonajes jFramePersonajes = new VentanaPersonajes ();    //Creo una instancia del JFram VentanaPersonajes
            jFramePersonajes.setVisible(true);   
            dispose();   //desaparece la ventana anterior 
        }
        
    }//GEN-LAST:event_btnSeleccionarCampeonActionPerformed

    public void limpiar(){
        txtNombrePlayer.setText(null);
        txtApellidoPlayer.setText(null);
        txtCedulaPlayer.setText(null);
        txtUsuarioPlayer.setText(null);
        btnCrear.setEnabled(true);
    }
    
    public void llenarCombo(){
        
        if(jugadores.size() > 0){
            cmblistaCedulas.setEnabled(true);
            jugadores = controller.extraerObjetos("jugadores.dat");
            cmblistaCedulas.setModel(new javax.swing.DefaultComboBoxModel(jugadores.toArray()));
        }else{
            cmblistaCedulas.setEnabled(false);
        }
    }
    
    public void llenarTabla(){
        
        if(jugadores.size() > 0){
            
            Jugador jug = new Jugador();
            DefaultTableModel model = (DefaultTableModel) tblJugadores.getModel();
            for(int i = 0; i < jugadores.size(); i ++){
                jug = (Jugador) jugadores.get(i);
                Object jugadoresG [] = {jug.getId(),jug.getNombre(),jug.getApellido(),jug.getCedula(),jug.getUsuario(),victoriasPorDefecto};
                model.insertRow(i, jugadoresG);
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameProject().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSeleccionarCampeon;
    private javax.swing.JComboBox<String> cmblistaCedulas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblApellido;
    private javax.swing.JLabel lblCedula;
    private javax.swing.JLabel lblCedula1;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JTable tblJugadores;
    private javax.swing.JTextField txtApellidoPlayer;
    private javax.swing.JTextField txtCedulaPlayer;
    private javax.swing.JTextField txtNombrePlayer;
    private javax.swing.JTextField txtUsuarioPlayer;
    // End of variables declaration//GEN-END:variables

}
